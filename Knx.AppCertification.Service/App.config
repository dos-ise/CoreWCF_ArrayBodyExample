<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <log4net>
    <!--<appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
      </layout>
    </appender>-->
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="${LOCALAPPDATA}\AppCertification\AppCertification.log"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="3"/>
      <maximumFileSize value="5000KB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
      </layout>
    </appender>
    <!--<appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <threshold value="INFO" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>-->
    <root>
      <level value="INFO"/>
      <!--<appender-ref ref="ConsoleAppender" />-->
      <appender-ref ref="RollingFileAppender"/>
      <!--<appender-ref ref="EventLogAppender" />-->
    </root>
  </log4net>
  <!--<system.diagnostics>
    <sources>
      <source propagateActivity="true" name="System.ServiceModel" switchValue="Verbose, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="TraceListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Verbose, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="MessageListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="d:\temp\trace.svclog" type="System.Diagnostics.XmlWriterTraceListener"
        name="TraceListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
      <add initializeData="d:\temp\messages.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="MessageListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
      <add type="System.Diagnostics.ConsoleTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ConsoleListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>-->
  <system.serviceModel>
    <!--<diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="false" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="false" maxMessagesToLog="3000"  maxSizeOfMessageToLog="2000"/>
    </diagnostics>-->
    <bindings>
      <webHttpBinding>
	    <binding name="RESTBinding" closeTimeout="00:25:00" openTimeout="00:25:00" receiveTimeout="00:25:00" sendTimeout="00:25:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" transferMode="Streamed">
		  <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647"/>
		</binding>
      </webHttpBinding>
      <basicHttpBinding>
        <binding name="basicBinding" closeTimeout="00:25:00" openTimeout="00:25:00" receiveTimeout="00:25:00" sendTimeout="00:25:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" transferMode="Streamed"/>
      </basicHttpBinding>
    </bindings>
    <behaviors>
	    <endpointBehaviors>
        <behavior name="RESTBehavior">
	        <webHttp helpEnabled="true" automaticFormatSelectionEnabled="true" faultExceptionEnabled="false"/>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="ServiceBehavior">
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceMetadata httpGetEnabled="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="ServiceBehavior" name="AppCertification.Service.AppVerificationService">
        <endpoint behaviorConfiguration="RESTBehavior" binding="webHttpBinding" bindingConfiguration="RESTBinding" name="REST" bindingName="AppServiceBinding" contract="AppCertification.Contracts.IAppVerificatinonService" bindingNamespace="http://www.test.org/AppService"/>
        <endpoint address="WS" binding="basicHttpBinding" bindingConfiguration="basicBinding" name="WebService" bindingName="AppServiceBindingForWebService" contract="AppCertification.Contracts.IAppVerificatinonService" bindingNamespace="http://www.test.org/AppService"/>
        <endpoint address="mex" binding="mexHttpBinding" name="MEX" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:80/AppService/"/>
          </baseAddresses>
        </host>
      </service>
    </services>
  </system.serviceModel>
  <startup useLegacyV2RuntimeActivationPolicy="true">
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8"/>
  </startup>
</configuration>
